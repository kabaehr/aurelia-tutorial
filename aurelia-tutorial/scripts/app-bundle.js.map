{"version":3,"sources":["src/app.ts","src/environment.ts","src/main.ts","src/resources/index.ts","src/routes/todo/add.ts","src/routes/todo/todo-model.ts","src/routes/todo/todo-service.ts","src/routes/todo/todo.ts"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { RouterConfiguration, Router } from 'aurelia-router';\r\n\r\nexport class App {\r\n  router: Router;\r\n\r\n  configureRouter(config: RouterConfiguration, router: Router): void {\r\n    this.router = router;\r\n    config.title = 'Aurelia';\r\n    config.map([\r\n      { route: ['', 'todo'], name: 'todo-list', moduleId: 'routes/todo/todo' },\r\n      { route: 'todo/add', name: 'add-todo', moduleId: 'routes/todo/add' }\r\n    ]);\r\n  }\r\n}\r\n","export default {\n  debug: true,\n  testing: true\n};\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n","import { autoinject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { TodoService } from \"./todo-service\";\r\nimport { TodoModel } from \"./todo-model\";\r\n\r\n@autoinject()\r\nexport class Add {\r\n    description: string;\r\n    priority: string;\r\n    deadline: string;\r\n\r\n    constructor(private todoService: TodoService, private router: Router) {\r\n        this.description = '';\r\n        this.priority = 'Medium';\r\n        this.deadline = new Date().toISOString().substring(0, 10);\r\n    }\r\n\r\n    addTodo() {\r\n        let todo = new TodoModel(this.description, this.deadline, this.priority);\r\n        this.todoService.todoList.push(todo);\r\n        this.router.navigateToRoute('todo-list');\r\n    }\r\n}","export class TodoModel {\r\n    constructor(private description: string, private deadline: string, private priority: string) {\r\n    }\r\n}","import { TodoModel } from './todo-model';\r\n\r\nexport class TodoService {\r\n    todoList: Array<TodoModel> = [];\r\n\r\n    constructor() {\r\n    }\r\n}","import { autoinject } from 'aurelia-framework';\r\nimport { TodoService } from './todo-service';\r\n\r\n@autoinject()\r\nexport class Todo {\r\n    constructor(private todoService: TodoService) {\r\n    }\r\n\r\n    get todos() {\r\n        return this.todoService.todoList;\r\n    }\r\n}"],"sourceRoot":".."}